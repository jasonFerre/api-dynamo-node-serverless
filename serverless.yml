service: serverless-node-api

custom:
  allowedHeaders:
    - Accept
    - Content-Type
    - Content-Length

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  timeout: 15
  region: sa-east-1
  stage: ${opt:stage, 'dev'}
  memorySize: 128
  endpointType: regional
  environment:
    COIN_TABLE: ${self:service}-${opt:stage, self:provider.stage} #opt is pass in the cmd line
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.COIN_TABLE}"

functions:
  addCoin:
    handler: handler.addCoin
    events:
      - http:
          method: post
          path: coin
          cors:
            origin: "*"
            headers: ${self:custom.allowedHeaders}

  getCoinByName:
    handler: handler.getCoinByName
    events:
      - http:
          method: get
          path: coin/coinName={coinName}

  getCoinPathParameters:
    handler: handler.getCoinPathParameters
    events:
      - http:
          method: get
          path: coin/coinName={coinName}&origin={origin}

resources:
  Resources:
    CoinTable:
      Type: AWS::DynamoDB::Table
      #DeletionPolicy: Retain -> in case of sls remove, this table not will be removed
      Properties:
        TableName: ${self:service}-${opt:stage, self:provider.stage}
        AttributeDefinitions:
          - AttributeName: CoinName
            AttributeType: S
          - AttributeName: Origin
            AttributeType: S
        KeySchema:
          - AttributeName: CoinName
            KeyType: HASH
          - AttributeName: Origin
            KeyType: RANGE
        ProvisionedThroughput: #BillingModes: PAY_PER_REQUEST
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
